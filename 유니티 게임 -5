// 충돌 처리 -1
using System.Collections; // Enemy 스크립트
using System.Collections.Generic;
using UnityEngine;

public class Enemy : MonoBehaviour
{
    [SerializeField]
    private float moveSpeed = 10f;
    private float minY = -7f; 
    private float hp = 1f; // 체력 변수 설정
    // Start is called before the first frame update
    public void setMoveSpeed(float moveSpeed) {
        this.moveSpeed = moveSpeed; 
    }

    // Update is called once per frame
    void Update()
    {
        transform.position += Vector3.down * moveSpeed * Time.deltaTime;
        if (transform.position.y < minY) {
            Destroy(gameObject);
        }
    }
    // is trigger가 체크 되어있으면 여기서 충돌 처리 
    private void OnTriggerEnter2D(Collider2D other) {
        if (other.gameObject.tag == "Weapon") { // 태그가 weapon으로 되어있는 오브젝트를 만났을 때 실행 될 수 있게 처리하는 부분.
            Weapon weapon = other.gameObject.GetComponent<Weapon>(); // Weapon스크립트 내용 가져오기 
            hp -= weapon.damage;
            if (hp <= 0) {
                Destroy(gameObject); // 적 hp가 0이 되거나 그거보다 적을 때 그 적 오브젝트는 사라지게 처리하는 부분.
            }
            Destroy(other.gameObject); // 무기는 적에게 닿으면 항상 사라져야 하니까 항상 사라지게 처리하는 부분.
        }
    }
    // 체크가 안 되어있으면 여기서 충돌 처리 
    // private void OnCollisionEnter2D(Collision2D other) {}
}

using System.Collections; // Weapon 스크립트
using System.Collections.Generic;
using UnityEngine;

public class Weapon : MonoBehaviour
{
    [SerializeField]
    private float moveSpped = 10f;
    public float damage = 1f; // 무기에 데미지 설정 
    // Start is called before the first frame update
    void Start()
    {
        Destroy(gameObject, 1f);
    }

    // Update is called once per frame
    void Update()
    {
        transform.position += Vector3.up * moveSpped * Time.deltaTime;
        
    }
}

// 충돌 처리 -2
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class player : MonoBehaviour
{
    [SerializeField]
    private float moveSpeed;

    [SerializeField]
    private GameObject Weapon;

    [SerializeField]
    private Transform shootTransform;

    [SerializeField]
    private float shootInterval = 0.05f;
    private float lastShootTime = 0f;
    // Update is called once per frame
    void Update()
    {
        // float horizontalInput = Input.GetAxisRaw("Horizontal");
        // //float verticalInput = Input.GetAxisRaw("Vertical");
        // Vector3 moveTo = new Vector3(horizontalInput, 0f, 0f);
        // transform.position += moveTo * moveSpeed * Time.deltaTime;
        Vector3 mousePos = Camera.main.ScreenToWorldPoint(Input.mousePosition);
        float tox = Mathf.Clamp(mousePos.x, -2.35f, 2.35f); // 현재값,최소값,최대값 
        transform.position = new Vector3(tox, transform.position.y, transform.position.z);

        Shoot();
    }   

    void Shoot() {
        if (Time.time - lastShootTime > shootInterval) {
            Instantiate(Weapon, shootTransform.position, Quaternion.identity);
            lastShootTime = Time.time;
        }

        
    }
    private void OnTriggerEnter2D(Collider2D other) { // 무기와 주인공이 충돌 했을 때 실행 되는 부분.
        if (other.gameObject.tag == "Enemy") {
            Debug.Log("Game Over"); // 무기와 주인공이 충돌하면 바로 주인공은 사라지고 Game Over 알림이 뜨게 처리하는 부분.
            Destroy(gameObject);
        }
    }
}

// 코인 만들기 -1
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Coin : MonoBehaviour
{
    // Start is called before the first frame update
    void Start()
    {
        Jump();
    }
    void Jump() {
        Rigidbody2D rigidBody = GetComponent<Rigidbody2D>(); //  유니티에 Rigidbody2D를 가져온다.

        float randomJumpForce = Random.Range(4f, 8f); // 4f~8f값 사이에 값을 랜덤으로 값을 반환해준다.
        Vector2 jumpVelocity = Vector2.up * randomJumpForce; // 코인이 위에서 랜덤으로 다른 높이로 생성이 된다.
        
        rigidBody.AddForce(jumpVelocity, ForceMode2D.Impulse);
    }
    // Update is called once per frame
    void Update()
    {
        
    }
}
